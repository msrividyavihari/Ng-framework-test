buildscript {
    repositories {
        mavenLocal()
    }
}

plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version "$SPRING_BOOT" apply false
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'com.palantir.git-version' version '0.7.3'
    id "com.google.cloud.tools.jib" version '3.1.2'
    id "com.avast.gradle.docker-compose" version '0.7.1'
}

apply from: "${rootProject.projectDir}/gradle/sonarqube.gradle"

dockerCompose {
    useComposeFiles = ['docker-compose.yml']
}

allprojects {

    group = 'com.deloitte.nextgen.fwservices'
    version = "0.0.2-SNAPSHOT"

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/plugins-release' }
        maven {url "https://plugins.gradle.org/m2/"}
        //maven { url 'http://fast4j.glbsnet.com:8086/artifactory/repo' }
    }

    configurations {
        all {
            exclude module: 'spring-boot-starter-logging'
            exclude module: 'logback-classic'
            exclude module: 'tomcat-jdbc'
        }
    }

    task showVersion {
        doLast {

            println "\nCurrent version: ${gitVersion()}\n"
            def details = versionDetails()
            println "last tag          : ${details.lastTag}"
            println "commit distance   : ${details.commitDistance}"
            println "hash              : ${details.gitHash}"
            println "branch name       : ${details.branchName}"
            println "is clean tag      : ${details.isCleanTag}"
        }
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'war'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.palantir.git-version'
    apply plugin: 'com.google.cloud.tools.jib'

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES

        }
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:$LOMBOK"
    }

    jib {
        from {
            image = "tomcat:9.0"
        }
    }

    processResources {
        expand(project.properties)
    }


}

wrapper {
    version '6.5'
    distributionType Wrapper.DistributionType.ALL
}